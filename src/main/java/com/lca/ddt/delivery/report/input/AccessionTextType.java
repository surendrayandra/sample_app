//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.05.30 at 03:09:20 PM IST 
//


package com.lca.ddt.delivery.report.input;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AccessionTextType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AccessionTextType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="ACCENCMNTS"/>
 *     &lt;enumeration value="SPLHNDLCMNTS"/>
 *     &lt;enumeration value="ADDITNLCMNTS"/>
 *     &lt;enumeration value="CCVREVCMNTS"/>
 *     &lt;enumeration value="CLIINFOSTUDY"/>
 *     &lt;enumeration value="SUMRYINTERP"/>
 *     &lt;enumeration value="SUMRYCMNTS"/>
 *     &lt;enumeration value="HISTINTERP"/>
 *     &lt;enumeration value="HISTDIAG"/>
 *     &lt;enumeration value="INTERNALTECHCMNTS"/>
 *     &lt;enumeration value="TechnicalComments"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "AccessionTextType")
@XmlEnum
public enum AccessionTextType {

    ACCENCMNTS("ACCENCMNTS"),
    SPLHNDLCMNTS("SPLHNDLCMNTS"),
    ADDITNLCMNTS("ADDITNLCMNTS"),
    CCVREVCMNTS("CCVREVCMNTS"),
    CLIINFOSTUDY("CLIINFOSTUDY"),
    SUMRYINTERP("SUMRYINTERP"),
    SUMRYCMNTS("SUMRYCMNTS"),
    HISTINTERP("HISTINTERP"),
    HISTDIAG("HISTDIAG"),
    INTERNALTECHCMNTS("INTERNALTECHCMNTS"),
    @XmlEnumValue("TechnicalComments")
    TECHNICAL_COMMENTS("TechnicalComments");
    private final String value;

    AccessionTextType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AccessionTextType fromValue(String v) {
        for (AccessionTextType c: AccessionTextType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
