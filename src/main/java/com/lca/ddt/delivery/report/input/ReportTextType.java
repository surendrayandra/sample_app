//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.05.30 at 03:09:20 PM IST 
//


package com.lca.ddt.delivery.report.input;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ReportTextType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ReportTextType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="REVISIONREASON"/>
 *     &lt;enumeration value="REVISIONTYPE"/>
 *     &lt;enumeration value="REVISIONCMNTS"/>
 *     &lt;enumeration value="INTERPRATATION"/>
 *     &lt;enumeration value="INTERPRATIVECMNTS"/>
 *     &lt;enumeration value="MORPHOLOGICEVAL"/>
 *     &lt;enumeration value="ABNORMALIMMPHEN"/>
 *     &lt;enumeration value="DNAPLDYSPHASE"/>
 *     &lt;enumeration value="DNAPLDYCMNT"/>
 *     &lt;enumeration value="SPHASE"/>
 *     &lt;enumeration value="CLINICALHISTORY"/>
 *     &lt;enumeration value="INDICATIONSTUDY"/>
 *     &lt;enumeration value="VIABILITY"/>
 *     &lt;enumeration value="VIABILITYCMNTS"/>
 *     &lt;enumeration value="RESULTSTXT"/>
 *     &lt;enumeration value="RESULTSCMNTS"/>
 *     &lt;enumeration value="INTERNALTECHCMNTS"/>
 *     &lt;enumeration value="INTERNALPROFCMNTS"/>
 *     &lt;enumeration value="METHDOLGYDISCLIMR"/>
 *     &lt;enumeration value="IMAGESDISCLIMR"/>
 *     &lt;enumeration value="INTENDEDDISCLIMR"/>
 *     &lt;enumeration value="PERFORMLOCDISCLIMR"/>
 *     &lt;enumeration value="TESTCATDISCLIMR"/>
 *     &lt;enumeration value="FOOTERDISCLIMR"/>
 *     &lt;enumeration value="DISCLIMRPHONE"/>
 *     &lt;enumeration value="REPORTRSTDISCLIMR"/>
 *     &lt;enumeration value="TECHRESULTCMNTS"/>
 *     &lt;enumeration value="SHOWREFONRPT"/>
 *     &lt;enumeration value="REPORTNOTES"/>
 *     &lt;enumeration value="REPORTCOMMENTS"/>
 *     &lt;enumeration value="GROSSDISC"/>
 *     &lt;enumeration value="KEYWORDS"/>
 *     &lt;enumeration value="SHOWREFINTONRPT"/>
 *     &lt;enumeration value="REPORTDISCLIMR1"/>
 *     &lt;enumeration value="REPORTDISCLIMR2"/>
 *     &lt;enumeration value="REPORTDISCLIMR3"/>
 *     &lt;enumeration value="QUALITATIVENAME"/>
 *     &lt;enumeration value="QUALITATIVEVALUE"/>
 *     &lt;enumeration value="CANCELREASON"/>
 *     &lt;enumeration value="CANCELREASON2"/>
 *     &lt;enumeration value="CANCELREASON3"/>
 *     &lt;enumeration value="CANCELREASON4"/>
 *     &lt;enumeration value="CANCELREASON5"/>
 *     &lt;enumeration value="ACCENCMNTS"/>
 *     &lt;enumeration value="ADDITNLCMNTS"/>
 *     &lt;enumeration value="SPLHNDLCMNTS"/>
 *     &lt;enumeration value="HISTINTERP"/>
 *     &lt;enumeration value="SUMRYCMNTS"/>
 *     &lt;enumeration value="SUMRYINTERP"/>
 *     &lt;enumeration value="CCVDISCLIMR"/>
 *     &lt;enumeration value="CCVHISTDISCLIMR"/>
 *     &lt;enumeration value="DNAPLOIDYCMNT"/>
 *     &lt;enumeration value="CCVDIAGCMNT"/>
 *     &lt;enumeration value="POFALLCELLS"/>
 *     &lt;enumeration value="POFSPHASE"/>
 *     &lt;enumeration value="DNAINDEX"/>
 *     &lt;enumeration value="INTERPRATIVESECONDCMNTS"/>
 *     &lt;enumeration value="SHOWGRAPHONRPT"/>
 *     &lt;enumeration value="SERIALDISP"/>
 *     &lt;enumeration value="CTCRPTTITLE"/>
 *     &lt;enumeration value="POPTABONRPT"/>
 *     &lt;enumeration value="SHOWPCTALCLLS"/>
 *     &lt;enumeration value="SHOWDNAPLOIDYDEFVAL"/>
 *     &lt;enumeration value="SHOWDNAPLOIDYDEF"/>
 *     &lt;enumeration value="SHOWCARCINOMA"/>
 *     &lt;enumeration value="SHOWPERCENTOFALLCELL"/>
 *     &lt;enumeration value="SPECIMENTEMPLATE"/>
 *     &lt;enumeration value="REVISIONTEXT"/>
 *     &lt;enumeration value="REFERENCES"/>
 *     &lt;enumeration value="FCSMARKERCONFIRM"/>
 *     &lt;enumeration value="INTERPRATATIONTITLE"/>
 *     &lt;enumeration value="PROGNOSTICDISCLIMR"/>
 *     &lt;enumeration value="CPTCODEDISCLAIMER"/>
 *     &lt;enumeration value="COMPLAINTPHONENUM"/>
 *     &lt;enumeration value="MANIFESTNOTES"/>
 *     &lt;enumeration value="CCVTABLE"/>
 *     &lt;enumeration value="SYNOPSIS"/>
 *     &lt;enumeration value="CANCELREASONCODE"/>
 *     &lt;enumeration value="PREVIOUSCASESTATUS"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ReportTextType")
@XmlEnum
public enum ReportTextType {

    REVISIONREASON("REVISIONREASON"),
    REVISIONTYPE("REVISIONTYPE"),
    REVISIONCMNTS("REVISIONCMNTS"),
    INTERPRATATION("INTERPRATATION"),
    INTERPRATIVECMNTS("INTERPRATIVECMNTS"),
    MORPHOLOGICEVAL("MORPHOLOGICEVAL"),
    ABNORMALIMMPHEN("ABNORMALIMMPHEN"),
    DNAPLDYSPHASE("DNAPLDYSPHASE"),
    DNAPLDYCMNT("DNAPLDYCMNT"),
    SPHASE("SPHASE"),
    CLINICALHISTORY("CLINICALHISTORY"),
    INDICATIONSTUDY("INDICATIONSTUDY"),
    VIABILITY("VIABILITY"),
    VIABILITYCMNTS("VIABILITYCMNTS"),
    RESULTSTXT("RESULTSTXT"),
    RESULTSCMNTS("RESULTSCMNTS"),
    INTERNALTECHCMNTS("INTERNALTECHCMNTS"),
    INTERNALPROFCMNTS("INTERNALPROFCMNTS"),
    METHDOLGYDISCLIMR("METHDOLGYDISCLIMR"),
    IMAGESDISCLIMR("IMAGESDISCLIMR"),
    INTENDEDDISCLIMR("INTENDEDDISCLIMR"),
    PERFORMLOCDISCLIMR("PERFORMLOCDISCLIMR"),
    TESTCATDISCLIMR("TESTCATDISCLIMR"),
    FOOTERDISCLIMR("FOOTERDISCLIMR"),
    DISCLIMRPHONE("DISCLIMRPHONE"),
    REPORTRSTDISCLIMR("REPORTRSTDISCLIMR"),
    TECHRESULTCMNTS("TECHRESULTCMNTS"),
    SHOWREFONRPT("SHOWREFONRPT"),
    REPORTNOTES("REPORTNOTES"),
    REPORTCOMMENTS("REPORTCOMMENTS"),
    GROSSDISC("GROSSDISC"),
    KEYWORDS("KEYWORDS"),
    SHOWREFINTONRPT("SHOWREFINTONRPT"),
    @XmlEnumValue("REPORTDISCLIMR1")
    REPORTDISCLIMR_1("REPORTDISCLIMR1"),
    @XmlEnumValue("REPORTDISCLIMR2")
    REPORTDISCLIMR_2("REPORTDISCLIMR2"),
    @XmlEnumValue("REPORTDISCLIMR3")
    REPORTDISCLIMR_3("REPORTDISCLIMR3"),
    QUALITATIVENAME("QUALITATIVENAME"),
    QUALITATIVEVALUE("QUALITATIVEVALUE"),
    CANCELREASON("CANCELREASON"),
    @XmlEnumValue("CANCELREASON2")
    CANCELREASON_2("CANCELREASON2"),
    @XmlEnumValue("CANCELREASON3")
    CANCELREASON_3("CANCELREASON3"),
    @XmlEnumValue("CANCELREASON4")
    CANCELREASON_4("CANCELREASON4"),
    @XmlEnumValue("CANCELREASON5")
    CANCELREASON_5("CANCELREASON5"),
    ACCENCMNTS("ACCENCMNTS"),
    ADDITNLCMNTS("ADDITNLCMNTS"),
    SPLHNDLCMNTS("SPLHNDLCMNTS"),
    HISTINTERP("HISTINTERP"),
    SUMRYCMNTS("SUMRYCMNTS"),
    SUMRYINTERP("SUMRYINTERP"),
    CCVDISCLIMR("CCVDISCLIMR"),
    CCVHISTDISCLIMR("CCVHISTDISCLIMR"),
    DNAPLOIDYCMNT("DNAPLOIDYCMNT"),
    CCVDIAGCMNT("CCVDIAGCMNT"),
    POFALLCELLS("POFALLCELLS"),
    POFSPHASE("POFSPHASE"),
    DNAINDEX("DNAINDEX"),
    INTERPRATIVESECONDCMNTS("INTERPRATIVESECONDCMNTS"),
    SHOWGRAPHONRPT("SHOWGRAPHONRPT"),
    SERIALDISP("SERIALDISP"),
    CTCRPTTITLE("CTCRPTTITLE"),
    POPTABONRPT("POPTABONRPT"),
    SHOWPCTALCLLS("SHOWPCTALCLLS"),
    SHOWDNAPLOIDYDEFVAL("SHOWDNAPLOIDYDEFVAL"),
    SHOWDNAPLOIDYDEF("SHOWDNAPLOIDYDEF"),
    SHOWCARCINOMA("SHOWCARCINOMA"),
    SHOWPERCENTOFALLCELL("SHOWPERCENTOFALLCELL"),
    SPECIMENTEMPLATE("SPECIMENTEMPLATE"),
    REVISIONTEXT("REVISIONTEXT"),
    REFERENCES("REFERENCES"),
    FCSMARKERCONFIRM("FCSMARKERCONFIRM"),
    INTERPRATATIONTITLE("INTERPRATATIONTITLE"),
    PROGNOSTICDISCLIMR("PROGNOSTICDISCLIMR"),
    CPTCODEDISCLAIMER("CPTCODEDISCLAIMER"),
    COMPLAINTPHONENUM("COMPLAINTPHONENUM"),
    MANIFESTNOTES("MANIFESTNOTES"),
    CCVTABLE("CCVTABLE"),
    SYNOPSIS("SYNOPSIS"),
    CANCELREASONCODE("CANCELREASONCODE"),
    PREVIOUSCASESTATUS("PREVIOUSCASESTATUS");
    private final String value;

    ReportTextType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ReportTextType fromValue(String v) {
        for (ReportTextType c: ReportTextType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
